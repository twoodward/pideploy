#!/bin/bash
set -e

DOMAIN="demo.local"
REALM="DEMO.LOCAL"

# Function to check if a package is installed
is_package_installed() {
    dpkg -l "$1" 2>/dev/null | grep -q "^ii"
}

# Function to check if a service exists and is running
is_service_running() {
    systemctl is-active --quiet "$1" 2>/dev/null
}

# Function to check if system is already domain joined
is_domain_joined() {
    realm list 2>/dev/null | grep -q "$DOMAIN"
}

# Function to install and configure Zabbix agent
install_zabbix_agent() {
    echo "=========================================="
    echo "Installing and Configuring Zabbix Agent"
    echo "=========================================="

    if is_service_running "zabbix-agent" && [ -f "/etc/zabbix/zabbix_agentd.conf" ]; then
        echo "Zabbix agent already installed, skipping..."
        return 0
    fi

    ZABBIX_DEB="/tmp/zabbix-release_latest_7.0+debian12_all.deb"
    wget -O "$ZABBIX_DEB" https://repo.zabbix.com/zabbix/7.0/debian/pool/main/z/zabbix-release/zabbix-release_latest_7.0+debian12_all.deb
    sudo dpkg -i "$ZABBIX_DEB"
    sudo apt-get install -f -y
    sudo apt update
    sudo apt install -y zabbix-agent

    SYSTEM_HOSTNAME=$(hostname)
    sudo cp /etc/zabbix/zabbix_agentd.conf /etc/zabbix/zabbix_agentd.conf.backup
    sudo sed -i 's/^Server=.*/Server=zabbix.demo.local/' /etc/zabbix/zabbix_agentd.conf
    sudo sed -i 's/^ServerActive=.*/ServerActive=zabbix.demo.local/' /etc/zabbix/zabbix_agentd.conf
    sudo sed -i "s/^# Hostname=.*/Hostname=$SYSTEM_HOSTNAME/" /etc/zabbix/zabbix_agentd.conf

    sudo systemctl restart zabbix-agent
    sudo systemctl enable zabbix-agent
    rm -f "$ZABBIX_DEB"
    echo "âœ“ Zabbix agent installed and configured"
}

read -p "Enter new hostname (press Enter to keep current): " NEW_HOSTNAME
if [ -n "$NEW_HOSTNAME" ]; then
    sudo hostnamectl set-hostname "$NEW_HOSTNAME"
    sudo sed -i '/127.0.1.1/d' /etc/hosts
    echo "127.0.1.1    $NEW_HOSTNAME" | sudo tee -a /etc/hosts
fi

if ! is_domain_joined; then
    read -p "Enter AD username (default: Administrator): " AD_USER
    AD_USER=${AD_USER:-Administrator}
fi

# Demo DNS & NTP
DNS_SERVERS=( "192.168.1.10" "192.168.1.11" "192.168.1.12" )
NTP_SERVER="192.168.1.1"

# Demo agent downloads (replace with real)
NINJA_URL="https://example.com/ninja-agent.deb"
NINJA_DEB="/tmp/ninja-agent.deb"

FALCON_URL="https://example.com/falcon-sensor.deb"
FALCON_DEB="/tmp/falcon-sensor.deb"
FALCON_CID="YOUR-FALCON-CID-HERE"

echo "Starting demo deployment..."

sudo apt update
sudo apt upgrade -y

for tool in iperf3 mtr btop tmux; do
    if ! is_package_installed "$tool"; then
        sudo apt install -y "$tool"
    fi
done

# NinjaOne agent check
if is_service_running "ninjarmm-agent" || [ -d "/opt/NinjaRMMAgent" ]; then
    echo "Ninja agent already installed"
else
    wget -O "$NINJA_DEB" "$NINJA_URL"
    sudo dpkg -i "$NINJA_DEB"
    sudo apt-get install -f -y
    rm -f "$NINJA_DEB"
fi

# Falcon sensor check
if is_service_running "falcon-sensor"; then
    echo "Falcon sensor already running"
else
    wget -O "$FALCON_DEB" "$FALCON_URL"
    sudo dpkg -i "$FALCON_DEB"
    sudo apt-get install -f -y
    sudo /opt/CrowdStrike/falconctl -s --cid="$FALCON_CID"
    sudo systemctl enable --now falcon-sensor
    rm -f "$FALCON_DEB"
fi

# Update DNS
sudo bash -c "cat > /etc/resolv.conf <<EOF
# Generated by demo deployment script
$(for dns in "${DNS_SERVERS[@]}"; do echo "nameserver $dns"; done)
search $DOMAIN
EOF
"

# Configure NTP
sudo sed -i '/^NTP=/d' /etc/systemd/timesyncd.conf
sudo sed -i '/^FallbackNTP=/d' /etc/systemd/timesyncd.conf
echo "NTP=$NTP_SERVER" | sudo tee -a /etc/systemd/timesyncd.conf
sudo systemctl restart systemd-timesyncd

# Domain join
if ! is_domain_joined; then
    sudo apt install -y realmd sssd sssd-tools libnss-sss libpam-sss adcli samba-common-bin oddjob oddjob-mkhomedir packagekit
    realm discover "$DOMAIN"
    sudo realm join --user="$AD_USER" --computer-ou=OU=workstations,OU=DEMO,DC=demo,DC=local "$DOMAIN"
fi

# SSSD config
sudo tee /etc/sssd/sssd.conf > /dev/null << EOF
[sssd]
domains = $DOMAIN
config_file_version = 2
services = nss, pam

[domain/$DOMAIN]
default_shell = /bin/bash
id_provider = ad
fallback_homedir = /home/%u
ad_domain = $DOMAIN
use_fully_qualified_names = False
ldap_id_mapping = True
access_provider = simple
simple_allow_groups = demo_linuxlogin
EOF
sudo chmod 600 /etc/sssd/sssd.conf
sudo systemctl restart sssd

# Home directory creation
sudo pam-auth-update --enable mkhomedir

# Sudo group
echo "%demo_linuxsudo ALL=(ALL:ALL) ALL" | sudo tee /etc/sudoers.d/demo_linuxsudo > /dev/null
sudo chmod 440 /etc/sudoers.d/demo_linuxsudo

# Install Zabbix
install_zabbix_agent

echo "=========================================="
echo "Demo Deployment Completed Successfully!"
echo "=========================================="
